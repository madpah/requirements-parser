[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "requirements-parser"
# !! version is managed by semantic_release
version = "0.7.0"
description = "This is a small Python module for parsing Pip requirement files."
authors = [
    "Paul Horton <paul@hogr.dev>",
    "David Fischer (@davidfischer)",
    "Trey Hunner (@treyhunner)",
    "Dima Veselov (@dveselov)",
    "Sascha Peilicke (@saschpe)",
    "Jayson Reis (@jaysonsantos)",
    "Max Shenfield (@mshenfield)",
    "Nicolas Delaby (@ticosax)",
    "St√©phane Bidoul (@sbidoul)"
]
maintainers = ["Paul Horton <paul@hogr.dev>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/madpah/requirements-parser/#readme"
repository = "https://github.com/madpah/requirements-parser"
documentation = "https://requirements-parser.readthedocs.io/"
packages = [
    { include = "requirements" },
    { include = "tests", format = "sdist" },
]
include = [
    { path = "AUTHORS.rst", format = "sdist" },
    { path = "LICENSE", format = "sdist" },
    { path = "README.md", format = "sdist" },
]
exclude = [
  # exclude dotfiles and dotfolders
  "**/.*",
  "docs/_build", "docs/processes",
]
classifiers = [
    # Trove classifiers - https://packaging.python.org/specifications/core-metadata/#metadata-classifier
    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Topic :: Software Development',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: System :: Software Distribution',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Typing :: Typed'
]
keywords = [
    "Pip", "requirements", "parse"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/madpah/requirements-parser/issues"

[tool.poetry.dependencies]
python = "^3.8"
types-setuptools = ">=69.1.0"

[tool.poetry.group.dev.dependencies]
coverage = "7.4.4"
flake8 = { version="7.0.0", python=">=3.8.1" }
flake8-annotations = { version="3.0.1", python=">=3.8.1" }
flake8-bugbear = { version="24.2.6", python=">=3.8.1" }
flake8-isort = "6.1.1"
flake8-quotes = "3.4.0"
flake8-use-fstring = "1.4"
pep8-naming = "0.13.3"
isort = "5.13.2"
autopep8 = "2.1.0"
mypy = "1.9.0"
tox = "4.14.2"

[tool.semantic_release]
# see https://python-semantic-release.readthedocs.io/en/latest/configuration.html
commit_author = "semantic-release <semantic-release>"
commit_message = "chore(release): {version}\n\nAutomatically generated by python-semantic-release\n\nSigned-off-by: semantic-release <semantic-release>"
upload_to_vcs_release = true
build_command = "pip install poetry && poetry build"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
  "requirements/__init__.py:__version__",
  "docs/conf.py:release",
]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
  "chore\\(release\\):",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.branches."step"]
match = "(build|chore|ci|docs|feat|fix|perf|style|refactor|test)"
prerelease = true
prerelease_token = "alpha"

[tool.semantic_release.branches."major-dev"]
match = "(\\d+\\.0\\.0-(dev|rc)|dev/\\d+\\.0\\.0)"
prerelease = true
prerelease_token = "rc"
